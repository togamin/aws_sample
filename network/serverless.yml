service: network
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ap-northeast-1

resources:
  Resources:
    # ------------------------------------------------------------#
    #  VPC
    # ------------------------------------------------------------#
    VPC:
      Type: "AWS::EC2::VPC"
      Properties:
        CidrBlock: "10.1.0.0/16"
        Tags:
          - Key: Name
            Value: !Sub ${self:provider.stage}-vpc
    # ------------------------------------------------------------#
    #  InternetGateway
    # ------------------------------------------------------------#
    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: !Sub ${self:provider.stage}-vpc-intenetgateway
    # ------------------------------------------------------------#
    #  InternetGatewayAttachment
    # ------------------------------------------------------------#
    InternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        InternetGatewayId: !Ref InternetGateway
        VpcId: !Ref VPC
    # ------------------------------------------------------------#
    #  Subnet
    # ------------------------------------------------------------#
    PublicSubnetA:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref VPC
        CidrBlock: "10.1.0.0/24"
        AvailabilityZone: ap-northeast-1a
        Tags:
          - Key: Name
            Value: !Sub ${self:provider.stage}-vpc-subnetA
    # ------------------------------------------------------------#
    #  RouteTable
    # ------------------------------------------------------------#
    PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: Name
            Value: !Sub ${self:provider.stage}-vpc-public-route-table
    # ------------------------------------------------------------#
    #  Route
    # ------------------------------------------------------------#
    PublicRoute:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PublicRouteTable
        DestinationCidrBlock: "0.0.0.0/0"
        GatewayId: !Ref InternetGateway
    # ------------------------------------------------------------#
    #  SubnetRouteTableAssociation
    # ------------------------------------------------------------#
    PublicSubnetARouteTableAssociationA:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref PublicRouteTable
        SubnetId: !Ref PublicSubnetA
    # ------------------------------------------------------------#
    #  SecurityGroup
    # ------------------------------------------------------------#
    SSHSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: "ssh"
        SecurityGroupIngress:
          -
            IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
        VpcId: !Ref VPC
    # ------------------------------------------------------------#
    #  VPC FlowLogs IAM Role
    # ------------------------------------------------------------#
    VpcFlowLogsIamRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: !Sub ${self:provider.stage}-flowlogs-test-role
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: "sts:AssumeRole"
        Policies:
          - PolicyName: !Sub ${self:provider.stage}-flowlogs-test-policy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                    - "logs:DescribeLogGroups"
                    - "logs:DescribeLogStreams"
                  Resource: "*"
    # ------------------------------------------------------------#
    #  VPC FlowLogs LogGroup
    # ------------------------------------------------------------#
    VpcFlowLogsLogGroup:
      Type: "AWS::Logs::LogGroup"
      Properties:
        LogGroupName: !Sub ${self:provider.stage}-vpc-flowlogs
    # ------------------------------------------------------------#
    #  FlowLog
    # ------------------------------------------------------------#
    VPCFlowLogs:
      Type: AWS::EC2::FlowLog
      Properties:
        ResourceId: !Ref VPC
        ResourceType: "VPC"
        TrafficType: "ALL"
        DeliverLogsPermissionArn: !GetAtt VpcFlowLogsIamRole.Arn
        LogGroupName: !Ref VpcFlowLogsLogGroup
        LogFormat: ${vpc-id} ${subnet-id} ${instance-id} ${srcaddr} ${dstaddr} ${srcport} ${dstport} ${protocol} ${action} ${log-status} ${flow-direction} ${traffic-path}
        MaxAggregationInterval: 60